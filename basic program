 1. Prime number(using count used to print ,or print as it is )

        int n=s.nextInt();
        int count;
        for(int i=1;i<=n;i++) {
            count=0;
            for (int j = 2; j <= i / 2; j++) {
                if (i % j == 0)
                    count++;
            }
            if (count != 0)
                System.out.println(i + " it is not a prime");

            else System.out.println(i + " it is a prime");

2. Fibonacci(sum,and list of numbers)

        int n=s.nextInt();
        System.out.println("the fibonacci of "+n+" is "+fib(n));
        for(int i=0;i<=n;i++){
            System.out.print(fiba(i)+" ");
        }
    }
    public static int fib(int n){
        if(n<0)
            System.out.println("Invalid input");
        if(n==0)
            return 0;
        else if(n==1||n==2)
            return 1;
        else return fib(n-1)+fib(n-2);
    }
    public static int fiba(int n){
        int f1=1,f2=1,fa=0;
        if(n==1||n==2)
            return 1;
        else{
            for(int i=3;i<=n;i++){
                fa=f1+f2;
                f1=f2;
                f2=fa;
            }
        }
        return fa;

3. Palindrome 1.integer and string
        int n=s.nextInt();
        int dig,temp=n,ans=0;
        while(n>0){
            dig=n%10;
            ans=ans*10+dig;
            n=n/10;
        }
        if(ans==temp)
            System.out.println("It is a palindrome");
        else
            System.out.println("It is not a palindrome");

        String val=s.next();
        String val1="";
        for(int i=val.length()-1;i>=0;i--){
            val1=val1+val.charAt(i);
        }
        if(val.toLowerCase().equals(val1.toLowerCase()))
            System.out.println("It is palindrome");
        else
            System.out.println("It is not palindrome");

4. Armstrong
        int n=s.nextInt();
        int dig,temp=n,ans=0;
        while(n>0){
            dig=n%10;
            ans+=dig*dig*dig;
            n=n/10;
        }
        if(temp==ans)
            System.out.println("It is a armstrong number");
        else
            System.out.println("It is not a armstrong number");\
5. GCD and LCM
        int a=s.nextInt();
        int b=s.nextInt();
        System.out.println("The GCD of "+a+" and "+b+" is "+gcd(a,b));
        System.out.println("The LCM of "+a+" and "+b+" is "+lcm(a,b));
    }
    public static int gcd(int a,int b){
        if(b==0)
            return a;
        else return gcd(b,a%b);
    }
    public static int lcm(int a,int b){
        return (a/gcd(a,b)*b);
    }
6. Conversion of decimal to binary and binary to decimal
        int n=s.nextInt();
        binary(n);
        int n1=s.nextInt();
        int d=0;
        int i=0;
        while(true){
            if(n1==0)
                break;
            else{
                int temp=n1%10;
                d+=temp*Math.pow(2,i);
                n1=n1/10;
                i++;
            }
        }
        System.out.println(d);
    }
    public static void binary(int n){
        int index=0;
        int []bin=new int[n];
        while(n>0){
            bin[index++]=n%2;
            n=n/2;
        }
        for(int i=index-1;i>=0;i--){
            System.out.print(bin[i]+" ");
        }
7. Magic number:163>1+6+3=10>1+0>1
        int n=s.nextInt();
        int sumofdigit=0;
        while(n>0 || sumofdigit>9){
            if(n==0){
                n=sumofdigit;
                sumofdigit=0;
            }
            sumofdigit+=n%10;
            n=n/10;
        }
        if(sumofdigit==1)
            System.out.println("It is a magic number");
        else System.out.println("It is not a magic number");
8. Factorial,print n and sum of n numbers using recursion and a calculator.
        int n = s.nextInt();
        System.out.println(fact(n));
        System.out.println(sum(n));
        printn(n);
        System.out.println();
        System.out.println("Calculator");
        int a = s.nextInt();
        int b = s.nextInt();
        int ans = 0;
        String symbol = s.next();
        switch (symbol) {
            case "+":
                ans = a + b;
                break;
            case "-":
                ans = a - b;
                break;
            case "/":
                ans = a / b;
                break;
            case "*":
                ans = a * b;
                break;
            default:
                System.out.println("Invalid Symbol");
        }
        System.out.println(ans);
    }
    public static int fact(int n) {
        if (n == 0)
            return 1;
        else return n * fact(n - 1);
    }
    public static int sum(int n) {
        if (n != 0) {
            //System.out.print(n+" ");
            return n + sum(n - 1);
        } else return n;
    }
    public static int printn(int n) {
        if (n > 0) {
            System.out.print(n + " ");
            return printn(n - 1);
        }
        return 1;
    }
9. Removing the similar elements in an array
        int n=s.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=s.nextInt();
        }
        int val=rem(arr);
        for(int i=0;i<val;i++){
            System.out.println(arr[i]+" ");
        }
    }
    public static int rem(int arr[]){
        int n= arr.length;
        if(n==0||n==1)
            return n;
        int j=0;
        for(int i=0;i<n-1;i++){
            if(arr[i]!=arr[i+1])
                arr[j++]=arr[i];
        }
        arr[j++]=arr[n-1];
        return j;
    }
